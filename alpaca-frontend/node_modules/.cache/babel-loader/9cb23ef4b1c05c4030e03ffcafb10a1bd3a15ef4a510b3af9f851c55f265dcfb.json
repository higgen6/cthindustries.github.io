{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chadr\\\\Desktop\\\\alpaca-project\\\\alpaca-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [profitLoss, setProfitLoss] = useState(0);\n\n  // Fetch P&L from the backend\n  const fetchProfitLoss = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/profit-loss');\n      const data = await response.json();\n      setProfitLoss(data.profitLoss);\n    } catch (error) {\n      console.error('Error fetching profit and loss:', error);\n    }\n  };\n\n  // Update P&L every minute\n  useEffect(() => {\n    fetchProfitLoss(); // Initial fetch\n    const interval = setInterval(() => {\n      fetchProfitLoss();\n    }, 60000); // 60,000ms = 1 minute\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trading Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profit and Loss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: profitLoss >= 0 ? 'green' : 'red'\n        },\n        children: [\"$\", profitLoss.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"iGoGaIqq3F9AsHH623dfRgGcLOs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","profitLoss","setProfitLoss","fetchProfitLoss","response","fetch","data","json","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/chadr/Desktop/alpaca-project/alpaca-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [profitLoss, setProfitLoss] = useState(0);\r\n\r\n    // Fetch P&L from the backend\r\n    const fetchProfitLoss = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/profit-loss');\r\n            const data = await response.json();\r\n            setProfitLoss(data.profitLoss);\r\n        } catch (error) {\r\n            console.error('Error fetching profit and loss:', error);\r\n        }\r\n    };\r\n\r\n    // Update P&L every minute\r\n    useEffect(() => {\r\n        fetchProfitLoss(); // Initial fetch\r\n        const interval = setInterval(() => {\r\n            fetchProfitLoss();\r\n        }, 60000); // 60,000ms = 1 minute\r\n\r\n        return () => clearInterval(interval); // Cleanup interval on component unmount\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Trading Dashboard</h1>\r\n                <h2>Profit and Loss</h2>\r\n                <p style={{ color: profitLoss >= 0 ? 'green' : 'red' }}>\r\n                    ${profitLoss.toFixed(2)}\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,aAAa,CAACI,IAAI,CAACL,UAAU,CAAC;IAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACZQ,eAAe,CAAC,CAAC,CAAC,CAAC;IACnB,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BR,eAAe,CAAC,CAAC;IACrB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBhB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BpB,OAAA;QAAAgB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBpB,OAAA;QAAGqB,KAAK,EAAE;UAAEC,KAAK,EAAEnB,UAAU,IAAI,CAAC,GAAG,OAAO,GAAG;QAAM,CAAE;QAAAa,QAAA,GAAC,GACnD,EAACb,UAAU,CAACoB,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAClB,EAAA,CAnCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}